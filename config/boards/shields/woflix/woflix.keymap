#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2

/ {
	behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "VOL_UP_TD";
            #binding-cells = <0>;
            tapping-term-ms = <50>;
            bindings = <&trans>, <&kp C_VOL_UP>;
        };

		td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "VOL_DN_TD";
            #binding-cells = <0>;
            tapping-term-ms = <50>;
            bindings = <&trans>, <&kp C_VOL_DN>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |    1      |    2    |    3    |    4     |    5     |    ?   |  |   ?   |   6      |    7     |    8    |   9    |   0   | BSPC  |
// |  TAB  |    Q      |    W    |    E    |    R     |    T     |                   |   Y      |    U     |    I    |   O    |   P   |   \   |
// |  CTRL |    A      |    S    |    D    |    F     |    G     |                   |   H      |    J     |    K    |   L    |   ;   |   '   |
// | SHIFT |    Z      |    X    |    C    |    V     |    B     |   "("  |  |  ")"  |   N      |    M     |    ,    |   .    |   /   | SHIFT/ENTER |
// |  ESC  |   CTRL    |   ALT   |   GUI   |   EISU   |  LOWER   |  SPACE |  | SPACE |  RAISE   |   EISU   |    ←    |   ↓    |   ↑   |   →   |
			bindings = <
&kp ESC      &kp N1     &kp N2    &kp N3     &kp N4     &kp N5     &trans    &trans    &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
&kp TAB      &kp Q      &kp W     &kp E      &kp R      &kp T      &td0      &trans    &kp Y      &kp U     &kp I     &kp O     &kp P     &kp BSLH
&kp LCTRL    &kp A      &kp S     &kp D      &kp F      &kp G      &td1      &trans    &kp H      &kp J     &kp K     &kp L     &kp SEMI  &kp APOS
&kp LSHFT    &kp Z      &kp X     &kp C      &kp V      &kp B      &kp LPAR  &kp RPAR  &kp N      &kp M     &kp COMMA &kp DOT   &kp SLASH &mt RSHFT ENTER
&kp ESCAPE   &kp LCTRL  &kp LALT  &kp LGUI   &kp LANG2  &mo LOWER  &kp SPACE &kp BSPC  &mo RAISE  &kp LANG1 &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  
			>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------ 
// |  `  |     1    |    2    |    3     |   4    |   5    |     ?   |  |   ?    |     6    |    7    |     KP/    |      KP*      |      KP-      |             |
// |  `  |     6    |    7    |    8     |   9    |   0    |                     |     (    |    )    |     KP7    |      KP8      |      KP9      |     KP+     |
// | F1  |    F2    |   F3    |   F4     |  F5    |  F6    |                     |     {    |    }    |     KP4    |      KP5      |      KP6      |    KPENT    |
// | F7  |    F8    |   F9    |   F10    |  F11   |  F12   |         |  |        |     [    |    ]    |     KP1    |      KP2      |      KP3      |    KPENT    |
// |     |          |         |          |        |        |         |  |        |          |         |     KP0    |      KP.      |     KPENT     |             |
			bindings = <
&kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5   &trans      &trans    &kp N6    &kp N7    &kp KP_SLASH &kp KP_ASTERISK  &kp LS(KP_MINUS) &trans
&kp GRAVE  &kp N6     &kp N7    &kp N8    &kp N9    &kp N0   &trans      &trans    &kp LPAR  &kp RPAR  &kp KP_N7        &kp KP_N8    &kp KP_N9       &kp KP_PLUS
&kp F1     &kp F2     &kp F3    &kp F4    &kp F5    &kp F6   &trans      &trans    &kp LBRC  &kp RBRC  &kp KP_N4        &kp KP_N5    &kp KP_N6       &kp KP_ENTER
&kp F7     &kp F8     &kp F9    &kp F10   &kp F11   &kp F12  &trans      &kp RBKT  &kp LBKT  &kp RBKT  &kp KP_N1        &kp KP_N2    &kp KP_N3       &kp KP_ENTER
&trans     &trans     &trans    &trans    &trans    &trans   &trans      &trans    &trans    &trans    &kp KP_N0        &kp KP_DOT   &kp KP_ENTER    &trans
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ~  |    !    |    @    |   #    |    $     |   %     |     ?   |  |   ?    |             |                  |                |                |               |      DEL     |
// |  ~  |    ^    |    &    |   *    |    (     |   )     |                     |             |                  |                |     _          |    +          |              |
// |  F1 |    F2   |    F3   |   F4   |    F5    |   F6    |                     |             |                  |                |     -          |    =          |              |
// |  F7 |    F8   |    F9   |   F10  |    F11   |   F12   |         |  |        |             |                  |                |                |               |              |
// |     |         |         |        |          |         |         |  |        |             |                  |                |                |               |              |
			bindings = <
&kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT   &trans      &trans  &bt BT_SEL 0   &ext_power EP_ON   &out OUT_TOG    &trans           &trans          &kp DEL
&kp TILDE &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR    &trans      &trans  &bt BT_SEL 1   &ext_power EP_OFF  &out OUT_BLE    &kp UNDER        &kp PLUS        &trans
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6      &trans      &trans  &bt BT_SEL 2   &rgb_ug RGB_TOG    &out OUT_USB    &kp MINUS        &kp EQUAL       &kp KP_SUBTRACT
&kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12     &kp LBKT    &trans  &bt BT_CLR     &trans             &rgb_ug RGB_BRD &rgb_ug RGB_BRI  &rgb_ug RGB_HUD &rgb_ug RGB_HUI
&trans    &trans    &trans    &trans    &trans    &trans      &trans      &trans  &trans         &trans             &rgb_ug RGB_EFR &rgb_ug RGB_SPD  &rgb_ug RGB_SPI &rgb_ug RGB_EFF
			>; 
		};
	};
};